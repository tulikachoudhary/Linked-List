/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
ListNode* start= new ListNode(); // dummy node for the edge case of length of ll == n
        start->next= head;     
        ListNode* f=start;
        ListNode* s=start;
        
        for(int i=1;i<=n;i++)   // f reaches n then traversaL of s starts 
        {                       // a valid gap is made
            f=f->next;
        }
        
        while(f->next!=NULL)
        {
            f=f->next;
            s=s->next;
        }
        s->next=s->next->next;  // s is one position before n therefore next is being dealt                                   with here 
        
        return start->next;
    }
};
